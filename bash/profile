#!/bin/bash

export BASH_SILENCE_DEPRECATION_WARNING=1

. ~/.dot-files/bash/fancy_directory.bash
. ~/.dot-files/bash/ps1.bash

alias vim="vim"
alias vi="vim"
export EDITOR="vim"

alias flushdns="dscacheutil -flushcache"

if [[ $(which hub) ]]; then
  alias git=hub
fi

if [ $(uname) = 'Darwin' ]; then
  alias ls='ls -FG'
  alias mv='mv -nv'
else
  alias ls='ls -p --color'
  alias mv='mv -v'
fi

alias ll='ls -lah'

# Load up ssh keys
ssh-add -A

# random env stuff
export ANDROID_HOME=/usr/local/opt/android-sdk
# History: don't store duplicates
export HISTCONTROL=erasedups
# History: 10,000 entries
export HISTSIZE=10000

# PATH
xcode-path() {
  which xcode-select 2>&1 >/dev/null
  if [[ "$?" == "0" ]]; then
    echo $(xcode-select -p)
  else
    echo "/Applications/Xcode.app/Contents/Developer"
  fi
}

export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:~/bin:$(xcode-path)/usr/bin:/usr/local/share/npm/bin:$PATH"

# Xcode
alias ddd="rm -rf ~/Library/Developer/Xcode/DerivedData/*"

# heroku
export PATH="/usr/local/heroku/bin:$PATH"

# go
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export GOPATH=~

# haskell
export PATH=$PATH:~/.cabal/bin:/Users/myobie/Library/Haskell/bin

# This resolves issues install the mysql, postgres, and other gems with native non universal binary extensions
export ARCHFLAGS='-arch x86_64'

# fzf
export FZF_DEFAULT_COMMAND='rg --files'

# node
export NODE_PATH="/usr/local/lib/node_modules"

# elixir
export ERL_AFLAGS="-kernel shell_history enabled"
export PATH="$PATH:/Users/myobie/.mix/escripts"

# colors
export LSCOLORS="exfxcxdxbxegedabagacad"
export CLICOLOR=true

# via mojombo http://gist.github.com/180587
psg() {
  ps wwwaux | egrep "($1|%CPU)" | grep -v grep
}

# sweetness from tim pease
p() {
  if [ -n "$1" ]; then
    ps -O ppid -U $USER | grep -i "$1" | grep -v grep
  else
    ps -O ppid -U $USER
  fi
}

pkill() {
  if [ -z "$1" ]; then
    echo "Usage: pkill [process name]"
    return 1
  fi

  local pid
  pid=$(p $1 | awk '{ print $1 }')

  if [ -n "$pid" ]; then
    echo -n "Killing \"$1\" (process $pid)..."
    kill -9 $pid
    echo "done."
  else
    echo "Process \"$1\" not found."
  fi
}

# bash-completion
if which brew >/dev/null; then
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
fi

# git shortcuts
search-history() {
  git log --pretty=format:'%h was %an, %ar, message: %s' | grep $@ | less
}

clone() {
  org=$(echo $1 | awk -F/ '{ print $1 }')
  mkdir -p ~/src/github.com/$org
  path=~/src/github.com/$1
  git clone $@ $path
  cd $path
}

src() {
  local dir

  if [[ "$@" == "" ]]; then
    dir=$(fd -t d -d 6 . ~/src 2>/dev/null | fzf +m)
  else
    dir=$(fd -t d -d 6 . ~/src 2>/dev/null | fzf +m -f "$@" | head -n 1)
  fi

  cd "$dir"
}

export-gpg-key() {
  gpg --output ~/Desktop/$1.sec.gpg --armor --export-secret-key $1
  gpg --output ~/Desktop/$1.pub.gpg --armor --export $1
}

# extras that shouldn't be in the repo?
if [ -f ~/.bash_extras ]; then
  . ~/.bash_extras
fi

# disable control s
stty stop ''

# rbenv
if which rbenv >/dev/null; then eval "$(rbenv init -)"; fi
